---
- name: nginx install & start services
  hosts: webservers
  become: true

  tasks:
  - name: Install nginx php-fpm and php
    apt:
      name: ['nginx', 'php-fpm', 'php']
      state: latest
      update_cache: yes
      
      
  - name: uninstall apache2 service
    apt:
      name: apache2
      state: absent
                    
  - name: create new default for nginx
    become: true
    copy:
      dest: "/etc/nginx/sites-available/default"
      content: | 
          server{
                 listen 80 default_server;
                 listen [::]:80 default_server;

                 root /var/www/html;

                 index index.php index.html index.htm index.nginx-debian.html;

                 server_name _;

                 location / {

                          try_files $uri $uri/ =404;
                 }



                 location ~ \.php$ {
                         include snippets/fastcgi-php.conf;

                         fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;


                 }


          }



  - name: create index.php file in required path
    become: true
    copy:
      dest: "/var/www/html/index.php"
      content: |
        <?php echo date("Y-m-d H:i:s") . " Welcome to " . gethostname() . "|" .$_SERVER['SERVER_ADDR'] .":" . $_SERVER['SERVER_PORT'] ."<br>\n"; ?>


  - name: Restart nginx
    become: true
    service:
      name=nginx
      state=restarted

- hosts: webservers
  tasks:
    - debug: var=ansible_all_ipv4_addresses
      
- hosts: haproxy
  become: true
  tasks:
  - name: Install haproxy service
    apt:
     name: haproxy
     state: latest     
     update_cache: yes

  - name: Update haproxy config file
    blockinfile:
     path: /etc/haproxy/haproxy.cfg
     block: |
        frontend haproxy
            bind *:80
            mode http
            default_backend webservers

        backend webservers
            balance roundrobin
            option forwardfor
        {%  for server in groups['webservers'] %}
            server {{ hostvars[server]['inventory_hostname'] }} {{ hostvars[server]['ansible_default_ipv4']['address']}}:80 check
        {% endfor %}
                        
  - name: restart haproxy
    action: service name=haproxy state=restarted
   
